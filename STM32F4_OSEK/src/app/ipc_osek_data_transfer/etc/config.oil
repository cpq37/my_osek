OSEK OSEK {

OS	ExampleOS {
    STATUS = EXTENDED;
    ERRORHOOK = TRUE;
    PRETASKHOOK = FALSE;
	POSTTASKHOOK = FALSE;
	STARTUPHOOK = FALSE;
	SHUTDOWNHOOK = FALSE;
	USERESSCHEDULER = FALSE;
	MEMMAP = FALSE;
};

APPMODE = AppMode1;

/* IPC usaged events */
EVENT = evIPCDataReceived;
EVENT = evIPCSlaverSendComplete;

/* System trace usage events */
EVENT = evSysTraceMsgQueue;

/* Input USART received complete */
EVENT = evInputRcvComplete;

/* IPC usage task */
TASK TaskIPC {
    PRIORITY = 7;
    ACTIVATION = 1;
    AUTOSTART = TRUE {
        APPMODE = AppMode1;
    }
    STACK = 512;
    TYPE = EXTENDED;
    SCHEDULE = FULL;
    EVENT = evIPCDataReceived;
    EVENT = evIPCSlaverSendComplete;
}

/* Demo application usage task */
TASK TaskDemo {
    PRIORITY = 2;
    ACTIVATION = 1;
    AUTOSTART = TRUE {
        APPMODE = AppMode1;
    }
    STACK = 512;
    TYPE = EXTENDED;
    SCHEDULE = FULL;
    EVENT = evInputRcvComplete;
}

TASK TaskIdle {
    PRIORITY = 1;
    ACTIVATION = 1;
    AUTOSTART = TRUE {
        APPMODE = AppMode1;
    }
    STACK = 512;
    TYPE = EXTENDED;
    SCHEDULE = FULL;
    EVENT = evSysTraceMsgQueue;
}

/* IPC transfer request IRQ */
ISR EXTI0_Handler {
    CATEGORY  = 2;
    PRIORITY  = 1;
	INTERRUPT = EXTI0;
    STACKSIZE = 256;
};

/* IPC SPI DMA transfer complete IRQ */
ISR DMA2_Stream2_Handler {
    CATEGORY  = 2;
    PRIORITY  = 1;
	INTERRUPT = DMA2_Stream2;
    STACKSIZE = 256;
};

/* UART2 input IRQ */
ISR USART2_Handler {
    CATEGORY  = 2;
    PRIORITY  = 7;
	INTERRUPT = USART2;
    STACKSIZE = 256;
};

/* System trace usage callback alarm */
ALARM SysTickCallbackAlarm {
    COUNTER = HardwareCounter;
    ACTION = ALARMCALLBACK {
        ALARMCALLBACKNAME = "SysTickCallback";
    }
}

COUNTER HardwareCounter {
   MAXALLOWEDVALUE = 60000000;
   TICKSPERBASE = 1;
   MINCYCLE = 1;
   TYPE = HARDWARE;
};

};
